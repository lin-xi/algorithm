{"dependencies":[{"name":"./page.less","dynamic":true},{"name":"./quickSort.ts","dynamic":true}],"generated":{"html":"<!DOCTYPE html>\n<html>\n\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width,initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no\">\n  <meta content=\"yes\" name=\"apple-mobile-web-app-capable\">\n  <meta content=\"black\" name=\"apple-mobile-web-app-status-bar-style\">\n  <meta content=\"telephone=no\" name=\"format-detection\">\n  <meta content=\"email=no\" name=\"format-detection\">\n  <meta name=\"msapplication-tap-highlight\" content=\"no\">\n  <title>quickSort</title>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"/page.f6d5e738.css\">\n</head>\n\n<body>\n  <h1>快速排序</h1>\n  <ul>\n    <h3>快速排序是对冒泡排序的一种改进。</h3>\n    <li> 首先考虑下如何将将二个有序数列合并</li>\n    <li> 它的基本思想是：通过一趟排序将要排序的数据分割成独立的两部分，其中一部分的所有数据都比另外一部分的所有数据都要小，然后再按此方法对这两部分数据分别进行快速排序，整个排序过程可以递归进行，以此达到整个数据变成有序序列</li>\n    \n  </ul>\n  <h2>非递归</h2>\n  <pre>\n    <code>\n    function mergeSort(arr: Array<number>): [Array<number>, number] {\n      let cnt: number = 0\n      let len = arr.length\n      let gap = 1;\n\n      while (gap < len) {\n        cnt++    //计数\n        for (let i: number = 0; i < len; i += 2 * gap) {\n          cnt++     //计数\n          for (let left: number = i; left < i + gap; left++) {\n            let right = i + gap\n            cnt++    //计数\n            if (arr[left] > arr[right]) {\n              [arr[left], arr[right]] = [arr[right], arr[left]]\n              let m: number = right\n              while (m < right + gap - 1 && arr[m] > arr[m + 1]) {\n                cnt++    //计数\n                [arr[m], arr[m + 1]] = [arr[m + 1], arr[m]]\n                m++\n              }\n            }\n          }\n        }\n        gap *= 2\n      }\n\n      return [arr, cnt]\n    }\n    </number></number></code>\n  </pre>\n\n  <h2>递归</h2>\n  <pre>\n    <code>\n    function mergeSort2(arr: Array<number>): Array<number> {\n      let cnt: number = 0\n      let result: Array<number> = []\n    \n      if (arr.length < 2) {\n        return arr\n      } else {\n        let middle = Math.floor(arr.length / 2)\n        let left: Array<number> = arr.slice(0, middle)\n        let right: Array<number> = arr.slice(middle)\n        result = merge(mergeSort2(left), mergeSort2(right))\n        console.log(result)\n        return result\n      }\n    }\n      \n    function merge(left: Array<number>, right: Array<number>) {\n      let result: Array<number> = []\n      let i: number = 0;\n      let j: number = 0;\n      while (left.length > 0 && right.length > 0) {\n        if (left[0] < right[0]) {\n          result.push(left.shift())\n        } else {\n          result.push(right.shift())\n        }\n      }\n      return result.concat(left).concat(right)\n    }\n    </number></number></number></number></number></number></number></number></code>\n  </pre>\n\n  <div class=\"playground\">\n    <div class=\"edit\">\n      <p>输入：</p>\n      <textarea id=\"input\">5,39,9,32,20,25,18,3,40,23,45,26,16,1,44,0,46,33,2,28,49,24,15,31,41,27,38,6,47,14,12,36,11,7,21,42,19,9,50,34,48,37,10,22,13,4,8,17,29,30,43,35</textarea>\n      <a class=\"button\">100000次 排序</a>\n    </div>\n    <div class=\"view\">\n      <div>\n        <p>结果：</p>\n        <textarea id=\"result\"></textarea>\n      </div>\n      <div>\n        耗时：\n        <span id=\"time\"></span>\n        循环次数：\n        <span id=\"count\"></span>\n      </div>\n    </div>\n  </div>\n  <script src=\"/quickSort.1c4935fd.js\"></script>\n  <script type=\"text/javascript\">\n\n    document.querySelector('.button').addEventListener('click', () => {\n      let start = Date.now()\n      let result;\n\n      for (let i = 0; i < 100000; i++) {\n        let arr = document.querySelector('#input').value.split(',')\n        arr = arr.map(item => {\n          return parseInt(item)\n        })\n        result = window.quickSort(arr, 0, arr.length - 1)\n      }\n      document.querySelector('#result').innerText = result.join(',')\n      document.querySelector('#time').innerText = (Date.now() - start) / 100000\n      // document.querySelector('#count').innerText = result[1]\n\n    })\n  </script>\n\n</body>\n\n</html>"},"hash":"b02d1261895c19ae70fe5cc38f9456bc","cacheData":{}}